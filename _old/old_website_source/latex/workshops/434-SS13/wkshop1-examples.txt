% LaTeX Workshop #1: Simple Trees Using the PHP Tree Drawer
% All Examples
% 3/1/13

----- 0. Intro -----

This workshop covers the following topics:

	1. Creating indented bracketed trees using a text editor (jEdit)
	2. Rules for the PHP Tree Drawer (doing all that it is capable of)
	3. Rules for the LaTeX Previewer (doing just as much as the PHP site)

Most of what we'll cover for #1/#2 will transfer to actual LaTeX, with some
minor (though annoying) differences.



----- 1. The Basics -----

We'll start with 1950s-style trees to keep things simple, then add in TP and
vP once we've covered all the basics.

Simple sentence -- each terminal node has one label.

	[S [DP monkeys] [VP [V like] [DP bananas]]]

Terminal nodes with multiple words automatically make a triangle.

	[S [DP crazy monkeys] [VP [V like] [DP purple bananas]]]

A node can have any number of children, so you can use ternary structures.

	[S [DP John] [VP [V gave] [DP a cupcake] [PP to Mary]]]
	
The colors will be messed up if you leave out the labels, but you can also
turn the colors off entirely.
	
Exercise: Modify the previous tree and complete the structure of the DPs/PPs.
Use the letter 'e' to label empty nodes. Be careful to match the opening and
closing brackets correctly.

Answer:

	[S [DP [D e] [NP John]] [VP [V gave] [DP [D a] [NP cupcake]] [PP [P to] [DP [D e] [NP Mary]]]]]
	
	
	
----- 2. Indented Trees -----
	
We can make an indented tree to show structure. Use "enter" and move the
subject and VP to a new line and "tab" to indent.

	[S
		[DP crazy monkeys]
		[VP [V like] [DP purple bananas]]]

The editor will keep the current level of indentation when you press "enter".
Continue the process of converting the linear structure until each child is
indented by one more level than its parent.

	[S
		[DP crazy monkeys]
		[VP
			[V like]
			[DP purple bananas]]]
			
Exercise: Copy the bracketed structure from the previous exercise to a text file
and indent it to create a tree.

Answer:

	[S
		[DP
			[D e]
			[NP John]]
		[VP
			[V gave]
			[DP
				[D a]
				[NP cupcake]]
			[PP
				[P to]
				[DP
					[D e]
					[NP Mary]]]]]

When writing trees from scratch, it's common leave small subtrees (such as
many DPs) all on one line. This makes the resulting tree more compact

	[S
		[DP	[D e]	[NP John]]
		[VP
			[V gave]
			[DP	[D a]	[NP cupcake]]
			[PP
				[P to]
				[DP	[D e]	[NP Mary]]]]]

When writing indented trees from scratch, it can be useful to leave most of
the closing brackets on their own lines. This makes it easier to see that
the brackets are matched, and makes it easier to modify the tree.

	[S
		[DP	[D e]	[NP John]]
		[VP
			[V gave]
			[DP	[D a]	[NP cupcake]]
			[PP
				[P to]
				[DP	[D e]	[NP Mary]]
			]
		]
	]

Now, let's add some adjuncts to this tree. Place the cursor right after the
closing bracket of the PP, press enter, and add the VP "for her birthday".

	[S
		[DP	[D e]	[NP John]]
		[VP
			[V gave]
			[DP	[D a]	[NP cupcake]]
			[PP
				[P to]
				[DP	[D e]	[NP Mary]]
			]
		]
		[PP
			[P for]
			[DP [D her] [NP birthday]]
		]
	]


The tree is not quite finished. Now we need to add the new VP that is formed
by adjoining the new PP. Select both the VP and PP by clicking and dragging,
and indent them by pressing tab. Then, add the new VP around them.
				
	[S
		[DP	[D e]	[NP John]]
		[VP
			[VP
				[V gave]
				[DP	[D a]	[NP cupcake]]
				[PP
					[P to]
					[DP	[D e]	[NP Mary]]
				]
			]
			[PP
				[P for]
				[DP [D her] [NP birthday]]
			]
		]
	]

You can also unindent a block of text by pressing shift-tab.

Exercise: Try removing the adjunct and the outer VP again.



----- 3. More Complex Sentences -----

Now let's add in T and Aux. Use T' for "T-bar".

Exercise: Draw the tree for "Google might be watching you"

	[TP
		[DP Google]
		[T'
			[T might]
			[AuxP
				[Aux be]
				[VP
					[V watching]
					[DP you]
				]
			]
		]
	]

Now for embedded clauses. Use PRES/PAST for tensed T. "That" complements are CPs.
Assume infinital clauses are TPs. Use PRO for the subject of an infinitival
clause.

Excercise: Draw the tree for "Billy complained [that his homework is hard]."

Exercise: Draw the tree for "Toms wants [PRO to be a syntactician]."



----- 4. Movement -----

The only way to do movement is to write the structure of the moved element
in its final position, and put traces in previosu positions. Turn off automatic
indexing and use manual indexes by appeding "_1", "_2", etc. to moved elements
and their traces.

	[CP
		[DP what_1]
		[C'
			[C [C 0] [V did_2]]
			[TP
				[DP the king]
				[T'
					[T t_2]
					[VP
						[V eat]
						[DP t_1]
					]
				]
			]
		]
	]

Exercise: Draw the tree for "Where does Chomsky get his ideas from?"



----- 5. LaTeX -----

To create trees using LaTeX, you need the package "qtree".

LaTeX is much more strict than the PHP drawer:

	1. The bracketed tree must be directly preceded by "\Tree"
	2. All node labels must start with a period
	3. All closing brackets must be directly preceded by whitespace.

A simple example:

	\Tree
	[.TP
		[.DP [.D a ] [.NP [.AP wild ] [.NP Pikachu ] ] ]
		[.T'
			[.T PAST ]
			[.VP appeared ]
		]
	]
	
In order to get rid of the lines between terminal nodes and their labels, you
can connect the label to the node with a "\\", which creates a manual newline.

	\Tree
	[.TP
		[.DP [.D\\a ] [.NP [.AP\\wild ] [.NP\\Pikachu ] ] ]
		[.T'
			[.T\\PAST ]
			[.VP\\appeared ]
		]
	]
	
You can get nicer "bars" by appending "\1" to a label. Use "\textsc{...}" to
get small caps.

	\Tree
	[.TP
		[.DP [.D\\a ] [.NP [.AP\\wild ] [.NP\\Pikachu ] ] ]
		[.T\1
			[.T\\\textsc{PAST} ]
			[.VP\\appeared ]
		]
	]
	
A few examples with v+V. First, the simple structure, then movement with traces,
and finally movement with arrows.

\Tree %John rolled the ball down the hill
[.TP
	[.DP\\John ]
	[.T\1
		[.T\\PAST ]
		[.VP
			[.V\\roll ]
			[.DP
				[.D\\the ]
				[.NP\\ball ]
			]
			[.PP 
				[.P\\down ]
				[.DP
					[.D\\the ]
					[.NP\\hill ]
				]
			]
		]
	]
]

\Tree %John rolled the ball down the hill (incl. v+V and traces)
[.TP
	[.DP\\John_1 ]
	[.T\1
		[.T\\PAST ]
		[.vP
			[.DP\\t_1 ]
			[.v\1
				[.V+v\\roll_2 ]
				[.VP
					[.DP
						[.D\\the ]
						[.NP\\ball ]
					]
					[.V\1
						[.V\\t_2 ]
						[.PP 
							[.P\\down ]
							[.DP
								[.D\\the ]
								[.NP\\hill ]
							]
						]
					]
				]
			]
		]
	]
]

\Tree %John rolled the ball down the hill (incl. v+V and movement)
% also requires packages "pstricks" and "tree-dvips"
[.TP
	[.DP\\\node{DP2}{John} ]
	[.T\1
		[.T\\PAST ]
		[.vP
			[.DP\\\node{DP1}{t_i} ]
			[.v\1
				[.v 
					[.V\\\node{V2}{roll} ]
					[.v ]
				]
				[.VP
					[.DP
						[.D\\the ]
						[.NP\\ball ]
					]
					[.V\1
						[.V\\\node{V1}{t_j} ]
						[.PP 
							[.P\\down ]
							[.DP
								[.D\\the ]
								[.NP\\hill ]
							]
						]
					]
				]
			]
		]
	]
]
\anodecurve[b]{DP1}[b]{DP2}{1in}
\anodecurve[b]{V1}[b]{V2}{1in}
